//https://www.geeksforgeeks.org/reverse-a-linked-list/

#include <iostream>
using namespace std;
class Node{
  public:
  int data;
  Node * next;
  Node(){
    next = nullptr;
  }
  
};
//incsert at first node
void push(Node ** head,int data){
    Node * new_node = new Node();
    new_node->data = data;
    new_node->next = *head;
    *head = new_node;
}
//insert at back
void push_back(Node* head,int data){
    Node * curr = head;
    while(curr->next!=nullptr){
        curr = curr->next;
    }
    Node * new_node = new Node();
    new_node->data = data;
    new_node->next = nullptr;
    curr->next = new_node;
    
}
void print(Node* head){
    Node* curr = head;
    while(curr!=nullptr){
        cout<<curr->data<<" ";
        curr = curr->next;
    }
    cout<<endl;
}
int count_node(Node * head){
    int cnt = 0;
    while(head){
        cnt++;
        head = head->next;
    }
    return cnt;
}
void reverse_list(Node ** head){
    Node * curr = *head;
    Node *next = nullptr,*prev = nullptr;
    while(curr!= nullptr){
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    *head = prev;
}
int main()
{
    Node * head = new Node();
    head->data = 1;
    push(&head,2);
    print(head);
    push_back(head,7);
    print(head);
    cout<<"count : "<<count_node(head)<<endl;
    reverse_list(&head);
    print(head);
    return 0;
}